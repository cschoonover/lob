{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001mongoose.connect\u0001 in\u0001/\u0001 (Found 33 matches in 20 files)\n\n/app.js:\n\t11: mongoose.connect(dbConfig.url);\n\n/node_modules/mongoose/README.md:\n\t48: First, we need to define a connection. If your app uses only one database, you should use `mongoose.connect`. If you need to create additional connections, use `mongoose.createConnection`.\n\t55: mongoose.connect('mongodb://localhost/my_database');\n\t58: Once connected, the `open` event is fired on the `Connection` instance. If you're using `mongoose.connect`, the `Connection` is `mongoose.connection`. Otherwise, `mongoose.createConnection` return value is a `Connection`.\n\n/node_modules/mongoose/examples/doc-methods.js:\n\t40: mongoose.connect(uri, function (err) {\n\t67:   mongoose.connection.db.dropDatabase(function () {\n\n/node_modules/mongoose/examples/aggregate/aggregate.js:\n\t32: mongoose.connect('mongodb://localhost/persons', function (err) {\n\n/node_modules/mongoose/examples/geospatial/geoJSONexample.js:\n\t23: mongoose.connect('mongodb://localhost/locations', function (err) {\n\n/node_modules/mongoose/examples/geospatial/geospatial.js:\n\t32: mongoose.connect('mongodb://localhost/persons', function (err) {\n\n/node_modules/mongoose/examples/globalschemas/gs_example.js:\n\t13: mongoose.connect('mongodb://localhost/persons', function(err) {\n\n/node_modules/mongoose/examples/lean/lean.js:\n\t32: mongoose.connect('mongodb://localhost/persons', function (err) {\n\n/node_modules/mongoose/examples/mapreduce/mapreduce.js:\n\t27: mongoose.connect('mongodb://localhost/persons', function (err) {\n\n/node_modules/mongoose/examples/population/population-across-three-collections.js:\n\t12: mongoose.connect('localhost', dbname);\n\t44: mongoose.connection.on('open', function() {\n\t132:   mongoose.connection.db.dropDatabase(function() {\n\t133:     mongoose.connection.close();\n\n/node_modules/mongoose/examples/population/population-basic.js:\n\t35: mongoose.connect('mongodb://localhost/console', function (err) {\n\n/node_modules/mongoose/examples/population/population-of-existing-doc.js:\n\t35: mongoose.connect('mongodb://localhost/console', function (err) {\n\n/node_modules/mongoose/examples/population/population-of-multiple-existing-docs.js:\n\t35: mongoose.connect('mongodb://localhost/console', function (err) {\n\n/node_modules/mongoose/examples/population/population-options.js:\n\t35: mongoose.connect('mongodb://localhost/console', function (err) {\n\n/node_modules/mongoose/examples/population/population-plain-objects.js:\n\t35: mongoose.connect('mongodb://localhost/console', function (err) {\n\n/node_modules/mongoose/examples/promises/promise.js:\n\t27: mongoose.connect('mongodb://localhost/persons', function (err) {\n\n/node_modules/mongoose/examples/querybuilder/querybuilder.js:\n\t27: mongoose.connect('mongodb://localhost/persons', function (err) {\n\n/node_modules/mongoose/examples/replicasets/replica-sets.js:\n\t32: mongoose.connect('mongodb://localhost:27018/persons,localhost:27019,localhost:27020', opts, function (err) {\n\n/node_modules/mongoose/examples/statics/statics.js:\n\t13: mongoose.connect('mongodb://localhost/persons', function(err) {\n\n/node_modules/mongoose/lib/index.js:\n\t184:  *     mongoose.connect('mongodb://user:pass@localhost:port/database');\n\t188:  *     mongoose.connect(uri);\n\t191:  *     mongoose.connect(uri, options);\n\t196:  *     mongoose.connect(uri, opts);\n\t431:  *     mongoose.connect(...);\n\t432:  *     mongoose.connection.on('error', cb);\n\nFound 33 matches in 20 files \n\n","undoManager":{"mark":-1,"position":9,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "]},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001mongoose.connect\u0001 in\u0001/models\u0001","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":44},"end":{"row":0,"column":73},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001mongoose.connect\u0001 in\u0001/models\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001mongoose.connect\u0001 in\u0001/\u0001","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app.js:",""]},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t11: mongoose.connect(dbConfig.url);","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":5,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["/node_modules/mongoose/README.md:","\t48: First, we need to define a connection. If your app uses only one database, you should use `mongoose.connect`. If you need to create additional connections, use `mongoose.createConnection`.","\t55: mongoose.connect('mongodb://localhost/my_database');","\t58: Once connected, the `open` event is fired on the `Connection` instance. If you're using `mongoose.connect`, the `Connection` is `mongoose.connection`. Otherwise, `mongoose.createConnection` return value is a `Connection`.","",""]},{"start":{"row":10,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/doc-methods.js:","\t40: mongoose.connect(uri, function (err) {","\t67:   mongoose.connection.db.dropDatabase(function () {","",""]},{"start":{"row":14,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/aggregate/aggregate.js:","\t32: mongoose.connect('mongodb://localhost/persons', function (err) {","",""]},{"start":{"row":17,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/geospatial/geoJSONexample.js:","\t23: mongoose.connect('mongodb://localhost/locations', function (err) {","",""]},{"start":{"row":20,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/geospatial/geospatial.js:","\t32: mongoose.connect('mongodb://localhost/persons', function (err) {","",""]},{"start":{"row":23,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/globalschemas/gs_example.js:","\t13: mongoose.connect('mongodb://localhost/persons', function(err) {","",""]},{"start":{"row":26,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/lean/lean.js:","\t32: mongoose.connect('mongodb://localhost/persons', function (err) {","",""]},{"start":{"row":29,"column":0},"end":{"row":32,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/mapreduce/mapreduce.js:","\t27: mongoose.connect('mongodb://localhost/persons', function (err) {","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":32,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/population/population-across-three-collections.js:","\t12: mongoose.connect('localhost', dbname);","\t44: mongoose.connection.on('open', function() {","\t132:   mongoose.connection.db.dropDatabase(function() {","\t133:     mongoose.connection.close();","",""]},{"start":{"row":38,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/population/population-basic.js:","\t35: mongoose.connect('mongodb://localhost/console', function (err) {","",""]},{"start":{"row":41,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/population/population-of-existing-doc.js:","\t35: mongoose.connect('mongodb://localhost/console', function (err) {","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":44,"column":0},"end":{"row":50,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/population/population-of-multiple-existing-docs.js:","\t35: mongoose.connect('mongodb://localhost/console', function (err) {","","/node_modules/mongoose/examples/population/population-options.js:","\t35: mongoose.connect('mongodb://localhost/console', function (err) {","",""]},{"start":{"row":50,"column":0},"end":{"row":53,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/population/population-plain-objects.js:","\t35: mongoose.connect('mongodb://localhost/console', function (err) {","",""]},{"start":{"row":53,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/promises/promise.js:","\t27: mongoose.connect('mongodb://localhost/persons', function (err) {","",""]},{"start":{"row":56,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/querybuilder/querybuilder.js:","\t27: mongoose.connect('mongodb://localhost/persons', function (err) {","",""]},{"start":{"row":59,"column":0},"end":{"row":62,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/replicasets/replica-sets.js:","\t32: mongoose.connect('mongodb://localhost:27018/persons,localhost:27019,localhost:27020', opts, function (err) {","",""]},{"start":{"row":62,"column":0},"end":{"row":65,"column":0},"action":"insert","lines":["/node_modules/mongoose/examples/statics/statics.js:","\t13: mongoose.connect('mongodb://localhost/persons', function(err) {","",""]},{"start":{"row":65,"column":0},"end":{"row":73,"column":0},"action":"insert","lines":["/node_modules/mongoose/lib/index.js:","\t184:  *     mongoose.connect('mongodb://user:pass@localhost:port/database');","\t188:  *     mongoose.connect(uri);","\t191:  *     mongoose.connect(uri, options);","\t196:  *     mongoose.connect(uri, opts);","\t431:  *     mongoose.connect(...);","\t432:  *     mongoose.connection.on('error', cb);","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":73,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["Found 33 matches in 20 files ",""]}]}],[{"group":"doc","deltas":[{"start":{"row":74,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":38},"end":{"row":0,"column":69},"action":"insert","lines":[" (Found 33 matches in 20 files)"]}]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":22},"end":{"row":3,"column":30},"isBackwards":true},"options":{"tabSize":4,"useSoftTabs":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1430342061375}